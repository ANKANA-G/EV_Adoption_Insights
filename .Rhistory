AgeGroup = rep(c("Below 18", "18-22", "23-30", "Above 30"), each = 2),
Gender = rep(c("Female", "Male"), times = 4),
Count = c(15, 20, 87, 79, 28, 82, 52, 85)
)
# Step 2: Build the plot with labels on top of bars
ggplot(age_gender_data, aes(x = AgeGroup, y = Count, fill = Gender)) +
geom_bar(stat = "identity", position = position_dodge(width = 0.8)) +
geom_text(aes(label = Count),
position = position_dodge(width = 0.8),
vjust = -0.5, size = 4) +  # Adjust vertical position and size
scale_fill_manual(values = c("Female" = "deeppink", "Male" = "dodgerblue")) +
labs(title = "Respondents by Age Group and Gender",
x = "Age Group",
y = "Number of Respondents",
fill = "Gender") +
theme_minimal(base_size = 14)
# Plotting bar chart for occupation
# Step 1: Frequency table from column 4
occupation_table <- table(ev_data[,4])
# Step 2: Bar chart with horizontal x-axis labels
barplot(occupation_table,
names.arg = names(occupation_table),
main = "Respondent Count by Occupation",
xlab = "Occupation",
ylab = "Number of Respondents",
col = "lightgreen",
las = 1,  # Sets labels horizontally
ylim = c(0, max(occupation_table) + 15))
# Step 3: Add count labels above each bar
text(x = seq_along(occupation_table),
y = occupation_table,
labels = occupation_table,
pos = 3, cex = 0.9)
# Plotting bar chart for taxes
# Step 1: Create frequency table
tax_table <- table(ev_data[,8])
# Step 2: Plot the bar chart
barplot(tax_table,
main = "Respondents' Views on Taxes",
xlab = "Tax Opinion",
ylab = "Number of Respondents",
col = "steelblue",
las = 2,
ylim = c(0, max(tax_table) + 35))  # Gives extra space for labels
# Step 3: Add labels above bars
text(x = seq_along(tax_table),
y = tax_table,
labels = tax_table,
pos = 3, cex = 0.9)
# Plotting bar chart of vehicles have/had
library(ggplot2)
# Step 1: Prepare the frequency data
vehicle_table <- as.data.frame(table(ev_data[,9]))
colnames(vehicle_table) <- c("Vehicle_Type", "Count")
# Step 2: Assign factor levels for consistent color order
vehicle_table$Vehicle_Type <- factor(vehicle_table$Vehicle_Type)
# Step 3: Plot using ggplot2 with a legend instead of x-axis labels
ggplot(vehicle_table, aes(x = Vehicle_Type, y = Count, fill = Vehicle_Type)) +
geom_bar(stat = "identity", color = "black", width = 0.7) +
geom_text(aes(label = Count), vjust = -0.5, size = 4) +
labs(title = "Type of Vehicles Have/Had",
x = NULL, y = "Number of Respondents", fill = "Vehicle Type") +
theme_minimal() +
theme(
axis.text.x = element_blank(),        # Remove x-axis labels
axis.ticks.x = element_blank(),       # Remove x-axis ticks
legend.title = element_text(size = 11, face = "bold"),
legend.text = element_text(size = 10),
plot.title = element_text(size = 14, face = "bold", hjust = 0.5)
)
#Plotting preference of vehicles
# Step 1: Create frequency table from column 10
vehicle_pref <- table(ev_data[,10])
# Step 2: Plot the bar chart with light purple color
barplot(vehicle_pref,
main = "Vehicle Preferences of Respondents",
xlab = "Preferred Vehicle Type",
ylab = "Number of Respondents",
col = "plum",
las = 1,                # horizontal x-axis labels
ylim = c(0, max(vehicle_pref) + 30))  # Extra space for labels
# Step 3: Add count labels above bars
text(x = seq_along(vehicle_pref),
y = vehicle_pref,
labels = vehicle_pref,
pos = 3, cex = 0.9)
#Plotting bar plot of gender vs. preference of type of vehicles
# Step 1: Create a frequency table by gender and vehicle preference
gender_vehicle_table <- table(ev_data[,3], ev_data[,10])
# Step 2: Create the grouped bar chart
barplot(gender_vehicle_table,
beside = TRUE,
col = c("thistle", "forestgreen"),     # Feminine mauve for Gender groups
legend.text = rownames(gender_vehicle_table),
args.legend = list(title = "Gender", x = "topright", cex = 0.8),
main = "Gender vs Preference of Type of Vehicle",
xlab = "Type of Vehicle",
ylab = "Number of Respondents",
ylim = c(0, max(gender_vehicle_table) + 20),
las = 1)   # Vertical axis labels for better readability
# Step 3: Add count labels above the bars
counts <- as.vector(gender_vehicle_table)
positions <- barplot(gender_vehicle_table, beside = TRUE, plot = FALSE)
text(x = positions,
y = counts,
labels = counts,
pos = 3, cex = 0.8)
# Plotting bar chart for knowledge about EV
# Step 1: Create frequency table
ev_knowledge <- table(ev_data[,11])
# Step 2: Plot bar chart and capture bar midpoints
bar_midpoints <- barplot(ev_knowledge,
main = "Respondents' Knowledge About Electric Vehicles",
xlab = "Knowledge Level",
ylab = "Number of Respondents",
col = "skyblue",
las = 1,
ylim = c(0, max(ev_knowledge) + 15))
# Step 3: Add centered count labels above bars
text(x = bar_midpoints,
y = ev_knowledge,
labels = ev_knowledge,
pos = 3,
cex = 0.9)
#Plotting bar chart for opinion about EV for reduction on global warming
# Step 1: Create frequency table
ev_opinion <- table(ev_data[,17])
# Step 2: Plot the bar chart and store bar midpoints
bar_midpoints <- barplot(ev_opinion,
main = "Opinion on EVs Reducing Global Warming",
xlab = "Opinion",
ylab = "Number of Respondents",
col = "lightseagreen",     # Calm and earthy tone
las = 1,                   # horizontal x-axis labels
ylim = c(0, max(ev_opinion) + 30))  # Extra space for labels
# Step 3: Add centered count labels above bars
text(x = bar_midpoints,
y = ev_opinion,
labels = ev_opinion,
pos = 3,
cex = 0.9)
#Plotting bar chart for opinion about EV better than regular Cars
# Step 1: Create frequency table
ev_vs_regular <- table(ev_data[,18])
# Step 2: Plot bar chart with space for labels
bar_midpoints <- barplot(ev_vs_regular,
main = "Opinion on EVs Being Better than Regular Cars",
xlab = "Opinion",
ylab = "Number of Respondents",
col = "mediumorchid",   # Soft purple tone
las = 1,                # Horizontal x-axis labels
ylim = c(0, max(ev_vs_regular) + 20))  # Extra space for count labels
# Step 3: Add count labels centered on top of bars
text(x = bar_midpoints,
y = ev_vs_regular,
labels = ev_vs_regular,
pos = 3,
cex = 0.9)
#Plotting bar chart for opinion about EV can save a lot of money
# Step 1: Create frequency table
ev_savings_opinion <- table(ev_data[,19])
# Step 2: Plot vertical bar chart
bar_midpoints <- barplot(ev_savings_opinion,
main = "Opinion on EVs Saving Money",
xlab = "Opinion",
ylab = "Number of Respondents",
col = "green3",       # Grass green tone
las = 1,              # Horizontal x-axis labels
ylim = c(0, max(ev_savings_opinion) + 20))
# Step 3: Add centered count labels on top of bars
text(x = bar_midpoints,
y = ev_savings_opinion,
labels = ev_savings_opinion,
pos = 3,
cex = 0.9)
#Plotting bar chart for opinion about EV are expensive
# Step 1: Create frequency table
ev_savings_opinion_20 <- table(ev_data[,20])
# Step 2: Plot vertical bar chart
bar_midpoints <- barplot(ev_savings_opinion_20,
main = "Opinion on EVs Saving Money",
xlab = "Opinion",
ylab = "Number of Respondents",
col = "yellow",       # Grass green tone
las = 1,              # Horizontal x-axis labels
ylim = c(0, max(ev_savings_opinion_20) + 15))
# Step 3: Add centered count labels on top of bars
text(x = bar_midpoints,
y = ev_savings_opinion_20,
labels = ev_savings_opinion_20,
pos = 3,
cex = 0.9)
#Plotting Bar Chart for opinion about EV costs about the same to buy a Fuel/CNG vehicles
# Step 1: Create frequency table
ev_cost_opinion <- table(ev_data[,23])
# Step 2: Plot bar chart and capture bar midpoints
bar_midpoints <- barplot(ev_cost_opinion,
main = "Opinion on EV Cost vs Fuel/CNG Vehicles",
xlab = "Opinion",
ylab = "Number of Respondents",
col = "red",           # Bold red color
las = 1,               # Horizontal x-axis labels
ylim = c(0, max(ev_cost_opinion) + 30))
# Step 3: Add count labels centered on top of bars
text(x = bar_midpoints,
y = ev_cost_opinion,
labels = ev_cost_opinion,
pos = 3,
cex = 0.9)
#Plotting Bar chart for government incentives influenced decision to buy EV
# Step 1: Create frequency table
gov_incentive_opinion <- table(ev_data[,28])
# Step 2: Match responses to custom colors
response_colors <- c("Yes" = "forestgreen",
"No" = "red",
"Maybe" = "royalblue")
# Step 3: Plot bar chart and capture midpoints
bar_midpoints <- barplot(gov_incentive_opinion,
main = "Did Government Incentives Influence EV Purchase?",
xlab = "Opinion",
ylab = "Number of Respondents",
col = response_colors[names(gov_incentive_opinion)],
las = 1,
ylim = c(0, max(gov_incentive_opinion) + 25))
# Step 4: Add centered count labels above bars
text(x = bar_midpoints,
y = gov_incentive_opinion,
labels = gov_incentive_opinion,
pos = 3,
cex = 0.9)
#----------------------------------------------------
# Chi square test of association
# Contingency table of Gender vs Preference of Type of Vehicle
# Extract relevant columns
gender <- ev_data[,3]
vehicle_pref <- ev_data[,10]
# Create contingency table
contingency_table <- table(gender, vehicle_pref)
# --- Display formatted table ---
cat("Gender vs Preference of Type of Vehicle\n\n")
vehicle_types <- colnames(contingency_table)
genders <- rownames(contingency_table)
# Print header
cat(sprintf("%-10s", "Gender"), paste(sprintf("%-22s", vehicle_types), collapse = ""), "TOTAL\n")
cat(rep("-", 10 + length(vehicle_types)*22 + 7), "\n")
# Print rows with totals
for (i in 1:nrow(contingency_table)) {
row_values <- contingency_table[i, ]
row_total <- sum(row_values)
cat(sprintf("%-10s", genders[i]), paste(sprintf("%-22d", row_values), collapse = ""), sprintf("%-5d\n", row_total))
}
# Print column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-10s", "TOTAL"), paste(sprintf("%-22d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# --- Chi-square Test Output ---
cat("Chi-Square Test of Independence Results:\n")
chi_test_result <- chisq.test(contingency_table)
print(chi_test_result)
# Contingency table of occupation with respect to gender
# Step 1: Extract relevant columns
gender <- ev_data[,3]
occupation <- ev_data[,4]
# Step 2: Create contingency table
contingency_table <- table(occupation, gender)
# Step 3: Display formatted contingency table with totals
cat("Occupation vs Gender Contingency Table\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Header
cat(sprintf("%-15s", "Occupation"), paste(sprintf("%-12s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 15 + length(col_titles)*12 + 7), "\n")
# Row values
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-15s", row_titles[i]), paste(sprintf("%-12d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-15s", "TOTAL"), paste(sprintf("%-12d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Chi-square test of independence
cat("Chi-Square Test Results:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
#Contingency table of Battery replacement of EV is expensive with next vehicle will be EV
# Step 1: Extract relevant columns
battery_cost_opinion <- ev_data[,25]
next_vehicle_ev <- ev_data[,29]
# Step 2: Create contingency table
contingency_table <- table(battery_cost_opinion, next_vehicle_ev)
# Step 3: Display formatted contingency table
cat("Battery Replacement Cost vs Next Vehicle Choice\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Print header
cat(sprintf("%-30s", "Battery Replacement Opinion"), paste(sprintf("%-20s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 30 + length(col_titles)*20 + 7), "\n")
# Print row values with totals
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-30s", row_titles[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Print column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-30s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Chi-square test of independence
cat("Chi-Square Test Results:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
#Contingency table of cost to buy an EV is same as CNG/Fuel Vehicle with next vehicle will be EV
# Step 1: Extract relevant columns
ev_cost_opinion <- ev_data[,23]
next_ev_decision <- ev_data[,29]
# Step 2: Create contingency table
contingency_table <- table(ev_cost_opinion, next_ev_decision)
# Step 3: Display formatted contingency table with totals
cat("Contingency Table: EV Cost vs Next Vehicle Decision\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Header row
cat(sprintf("%-35s", "EV Cost Opinion"), paste(sprintf("%-20s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 35 + length(col_titles)*20 + 7), "\n")
# Row values
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-35s", row_titles[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-35s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Chi-square test of independence
cat("Chi-Square Test Result:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
#  Contingency table of occupation with EV is expensive
# Step 1: Extract relevant columns
occupation <- ev_data[,4]
ev_expensive <- ev_data[,20]
# Step 2: Create contingency table
contingency_table <- table(occupation, ev_expensive)
# Step 3: Display formatted contingency table with totals
cat("Contingency Table: Occupation vs EV Expense Opinion\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Header row
cat(sprintf("%-25s", "Occupation"), paste(sprintf("%-20s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 25 + length(col_titles)*20 + 7), "\n")
# Row values
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-25s", row_titles[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-25s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Chi-square test of independence
cat("Chi-Square Test Result:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
# Contingency table of age group with next vehicle will be EV
# Step 1: Extract relevant columns
age_group <- ev_data[,2]
next_vehicle_ev <- ev_data[,27]
# Step 2: Create contingency table
contingency_table <- table(age_group, next_vehicle_ev)
# Step 3: Display formatted contingency table with totals
cat("Contingency Table: Age Group vs Next Vehicle Will Be EV\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Header row
cat(sprintf("%-20s", "Age Group"), paste(sprintf("%-20s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 20 + length(col_titles)*20 + 7), "\n")
# Row values
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-20s", row_titles[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-20s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Chi-square test
cat("Chi-Square Test Result:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
# Contingency table of influenced by gov.incentives with next vehicle will be EV
# Step 1: Extract relevant columns
gov_incentive <- ev_data[,28]
next_vehicle_ev <- ev_data[,29]
# Step 2: Create contingency table
contingency_table <- table(gov_incentive, next_vehicle_ev)
# Step 3: Display formatted contingency table with totals
cat("Contingency Table: Influenced by Gov Incentives vs Next Vehicle Will Be EV\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Header row
cat(sprintf("%-25s", "Gov Incentive"), paste(sprintf("%-20s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 25 + length(col_titles)*20 + 7), "\n")
# Row values
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-25s", row_titles[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-25s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Chi-square test
cat("Chi-Square Test Result:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
# Contingency table of influenced by gov.incentives with switch to EV
# Step 1: Extract relevant columns
gov_influence <- ev_data[,28]
switch_to_ev <- ev_data[,35]
# Step 2: Create contingency table
contingency_table <- table(gov_influence, switch_to_ev)
# Step 3: Display formatted contingency table with totals
cat("Contingency Table: Govt Incentive Influence vs Switch to EV\n\n")
row_titles <- rownames(contingency_table)
col_titles <- colnames(contingency_table)
# Print header
cat(sprintf("%-30s", "Gov Incentive"), paste(sprintf("%-20s", col_titles), collapse = ""), "TOTAL\n")
cat(rep("-", 30 + length(col_titles)*20 + 7), "\n")
# Print row values
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-30s", row_titles[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Print column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-30s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Step 4: Perform Chi-square test of independence
cat("Chi-Square Test Result:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
# Contingency table of residential area with switch to EV
# Extract the relevant columns
res_area <- ev_data[,6]
switch_to_ev <- ev_data[,35]
# Create contingency table
contingency_table <- table(res_area, switch_to_ev)
# Display formatted contingency table with row and column totals
cat("Contingency Table: Residential Area vs Switch to EV\n\n")
row_names <- rownames(contingency_table)
col_names <- colnames(contingency_table)
# Print header
cat(sprintf("%-25s", "Residential Area"), paste(sprintf("%-20s", col_names), collapse = ""), "TOTAL\n")
cat(rep("-", 25 + length(col_names)*20 + 7), "\n")
# Print row data
for (i in 1:nrow(contingency_table)) {
row_vals <- contingency_table[i, ]
row_total <- sum(row_vals)
cat(sprintf("%-25s", row_names[i]), paste(sprintf("%-20d", row_vals), collapse = ""), sprintf("%-5d\n", row_total))
}
# Print column totals
col_totals <- colSums(contingency_table)
cat(sprintf("%-25s", "TOTAL"), paste(sprintf("%-20d", col_totals), collapse = ""), sprintf("%-5d\n\n", sum(col_totals)))
# Chi-square test
cat("Chi-Square Test Result:\n")
chi_result <- chisq.test(contingency_table)
print(chi_result)
#--------------------------------------------------------------------
# ANALYSIS OF VARIANCE
# Load required libraries
library(dplyr)
library(ggplot2)
library(multcomp)
# Create a synthetic dataset from group summaries
set.seed(123)  # For reproducibility
group_data <- list(
G1 = rnorm(n = 166, mean = 1.7771, sd = sqrt(0.42876304)),
G2 = rnorm(n = 110, mean = 1.8909, sd = sqrt(0.24482704)),
G3 = rnorm(n = 137, mean = 1.9343, sd = sqrt(0.10595025)),
G4 = rnorm(n = 35,  mean = 1.9429, sd = sqrt(0.17313921))
)
# Combine into one data frame
vehicle_pref_df <- bind_rows(
data.frame(AgeGroup = "Below 18", Preference = group_data$G1),
data.frame(AgeGroup = "18–22",     Preference = group_data$G2),
data.frame(AgeGroup = "23–30",     Preference = group_data$G3),
data.frame(AgeGroup = "Above 30",  Preference = group_data$G4)
) %>%
mutate(AgeGroup = factor(AgeGroup, levels = c("Below 18", "18–22", "23–30", "Above 30")))
# One-way ANOVA
anova_model <- aov(Preference ~ AgeGroup, data = vehicle_pref_df)
summary(anova_model)
# Fisher's Individual Tests (Tukey HSD)
fisher_test <- glht(anova_model, linfct = mcp(AgeGroup = "Tukey"))
summary(fisher_test)
confint(fisher_test)
# Visualization: Boxplot
ggplot(vehicle_pref_df, aes(x = AgeGroup, y = Preference)) +
geom_boxplot(fill = "lightblue", color = "darkblue") +
labs(title = "Vehicle Preference by Age Group", x = "Age Group", y = "Preference Score") +
theme_minimal()
# CONFUSION MATRIX
# MODEL 1
# Recreate the data frame
data <- data.frame(
Gender = gender,
Age = factor(age),
Occupation = factor(occupation),
Education = factor(education),
Income = factor(income),
NextEV = factor(next_ev),
Incentive = factor(govt_incentive)
)
